pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        //retry(1)
    }
    environment {
        DEBUG = 'true'
    }
        
     
    stages {
        stage('Build') {
            steps {
              sh 'echo this is Build'
            }
        }
        stage('Test') {
            steps {
             sh 'echo this is Test'
            }
        }
        stage('Deploy') {
             when {
                expression { env.GIT_BRANCH== 'origin/main' } //it's working for deployment
            }
            steps {
                sh 'echo this is Deploy'
                //error 'pipeline failed'
            }
        }

        // stage('Approval'){

        //     input {
        //         message "Should we continue?"
        //         ok "Yes, we should."
        //         submitter "alice,bob"
        //         parameters {
        //             string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        //         }
        //     }
        //     steps {
        //         echo "Hello, ${PERSON}, nice to meet you."
        //     }
        // }
    }

    post{
      always{
        echo "This action run always"
        deleteDir()
      }

      success{
  
         echo "This section run when pipeline success"
      }

      failure{
          echo "This action run when pipeline failure"

      }
    }
}